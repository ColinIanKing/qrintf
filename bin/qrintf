#! /usr/bin/perl

use strict;
use warnings;
use File::Basename qw(basename dirname);
use File::Temp qw(tempdir);
use POSIX qw(WIFEXITED WEXITSTATUS WTERMSIG);

if (@ARGV < 2 || grep { $_ =~ /^(-h|--help)$/s } @ARGV) {
    print "Usage: $0 compiler [compiler-options...] filename\n";
    exit 0;
}

my $pwd = dirname($0);

my $cc = shift @ARGV;

if (basename($cc) =~ m{^g(?:cc|\+\+)}) {
    # is GCC, use "-wrapper"
    exec "$cc", qw(-no-integrated-cpp -wrapper), "$pwd/../share/qrintf/gcc-wrapper", @ARGV;
    die "failed to exec $cc:$!";
} else {
    # mimic GCC's "-no-integrated-cpp -wrapper"

    # suppress warnings like: `argument unused during compilation: '-I include'`
    unshift @ARGV, "-Qunused-arguments"
        if basename($cc) =~ m{^clang};

    # splice "-o fn" from ARGV
    my $output_fn;
    for (my $i = 0; $i < @ARGV;) {
        if ($i + 1 < @ARGV && $ARGV[$i] eq '-o') {
            $output_fn = $ARGV[$i + 1];
            splice @ARGV, $i, 2;
        } else {
            ++$i;
        }
    }
    # and take the last argument as the source fn
    my $fn = pop @ARGV;

    # create temporary directory
    my $tempdir = tempdir(CLEANUP => 1);
    my $tempfn = basename($fn);
    $tempfn =~ s{\.c(.*)$}{.i@{[$1 ? 'i' : '']}}s
        or $tempfn = "$tempfn.i";
    $tempfn = "$tempdir/$tempfn";

    # invoke cpp
    run_cmd(
        "$pwd/../share/qrintf/gcc-wrapper",
        $cc, '-E',
        (grep { $_ ne '-c' } @ARGV),
        $fn,
        '-o', $tempfn,
    );

    exit 0
        if grep { $_ eq '-E' } @ARGV;

    # invoke cc
    push @ARGV, $tempfn;
    push @ARGV, '-o', $output_fn
        if defined $output_fn;
    run_cmd($cc, @ARGV);

    exit 0;
}

sub run_cmd {
    my (@argv) = @_;
    system(@argv) == 0 and return;
    if ($? == -1) {
        die "failed to exec $argv[0]:$!";
    } elsif (WIFEXITED($?)) {
        exit WEXITSTATUS($?);
    } else {
        die "$argv[0] exitted due to signal @{[WTERMSIG($?)]}\n";
    }
}
